{"version":3,"file":"static/js/684.3231b01f.chunk.js","mappings":"yPAKMA,EAAS,CACbC,KAAM,CACJC,OAAQ,UAEVC,MAAO,CACLC,WAAY,WAEdC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,IAEhBC,UAAW,CACTC,UAAW,OACXN,MAAO,OACPO,QAAS,OACTC,UAAW,aACXV,WAAY,UACZW,SAAU,OACVC,WAAY,IACZC,gBAAiB,UACjBC,aAAc,MACdC,OAAQ,oBACRC,OAAQ,UACRC,UAAW,0DAEbC,OAAQ,CACNV,UAAW,OACXN,MAAO,QACPiB,OAAQ,OACRR,SAAU,OACVS,WAAY,OACZC,MAAO,OACPR,gBAAiB,UACjBC,aAAc,MACdC,OAAQ,UACRL,UAAW,aACXM,OAAQ,UACRC,UAAW,2DAIA,SAASK,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEQC,GAAMC,EAAAA,EAAAA,KAAND,EAEFE,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUT,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,MACtC,OAAQV,GACN,IAAK,OACH,OAAOC,EAAQS,GACjB,IAAK,QACH,OAAOP,EAASO,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,QACE,SAYN,OACE,iBAAKC,MAAOzC,EAAOC,KAAnB,WACE,eAAIwC,MAAOzC,EAAOG,MAAlB,SAA0BiC,EAAE,sBAE5B,kBAAMM,SAZW,SAAAC,GACnBA,EAAEC,iBACFjB,EAASkB,EAAAA,GAAAA,SAAwB,CAAEf,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAOoBM,MAAOzC,EAAOK,KAAMyC,aAAa,MAA/D,WACE,mBAAOL,MAAOzC,EAAOO,MAArB,UACG6B,EAAE,mBACH,kBACEK,MAAOzC,EAAOW,UACdoC,KAAK,OACLjB,KAAK,OACLU,MAAOV,EACPkB,SAAUV,EACVW,YAAab,EAAE,6BACfc,UAAQ,QAIZ,mBAAOT,MAAOzC,EAAOO,MAArB,UACG6B,EAAE,0BACH,kBACEK,MAAOzC,EAAOW,UACdoC,KAAK,QACLjB,KAAK,QACLU,MAAOR,EACPgB,SAAUV,EACVW,YAAab,EAAE,+BACfc,UAAQ,QAIZ,mBAAOT,MAAOzC,EAAOO,MAArB,UACG6B,EAAE,4BACH,kBACEK,MAAOzC,EAAOW,UACdoC,KAAK,WACLjB,KAAK,WACLU,MAAON,EACPc,SAAUV,EACVW,YAAab,EAAE,iCACfc,UAAQ,QAIZ,mBAAQT,MAAOzC,EAAOsB,OAAQyB,KAAK,SAAnC,SACGX,EAAE","sources":["views/RegisterView.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport { useTranslation } from 'react-i18next';\n\nconst styles = {\n  wrap: {\n    margin: '0 auto',\n  },\n  title: {\n    fontFamily: 'inherit',\n  },\n  form: {\n    width: 400,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 20,\n  },\n  textField: {\n    marginTop: '10px',\n    width: '100%',\n    padding: '10px',\n    boxSizing: 'border-box',\n    fontFamily: 'inherit',\n    fontSize: '20px',\n    fontWeight: 200,\n    backgroundColor: 'inherit',\n    borderRadius: '5px',\n    border: '2px solid #007188',\n    cursor: 'pointer',\n    boxShadow: '0 1px 3px rgb(0 0 0 / 12%), 0 1px 1px rgb(0 0 0 / 14%)',\n  },\n  button: {\n    marginTop: '20px',\n    width: '200px',\n    height: '50px',\n    fontSize: '16px',\n    lineHeight: '26px',\n    color: '#fff',\n    backgroundColor: '#007188',\n    borderRadius: '5px',\n    border: 'inherit',\n    boxSizing: 'border-box',\n    cursor: 'pointer',\n    boxShadow: '0 1px 3px rgb(0 0 0 / 12%), 0 1px 1px rgb(0 0 0 / 14%)',\n  },\n};\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const { t } = useTranslation();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  // const isBtnDisabled = !name || !email || !password;\n  return (\n    <div style={styles.wrap}>\n      <h1 style={styles.title}>{t('logUpForm.title')}</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          {t('logUpForm.name')}\n          <input\n            style={styles.textField}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            placeholder={t('logUpForm.placeholderName')}\n            required\n          />\n        </label>\n\n        <label style={styles.label}>\n          {t('logUpForm.emaileTitle')}\n          <input\n            style={styles.textField}\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            placeholder={t('logUpForm.emailePlaceholder')}\n            required\n          />\n        </label>\n\n        <label style={styles.label}>\n          {t('logUpForm.passwordTitle')}\n          <input\n            style={styles.textField}\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            placeholder={t('logUpForm.passwordPlaceholder')}\n            required\n          />\n        </label>\n\n        <button style={styles.button} type=\"submit\">\n          {t('logUpForm.button')}\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"names":["styles","wrap","margin","title","fontFamily","form","width","label","display","flexDirection","marginBottom","textField","marginTop","padding","boxSizing","fontSize","fontWeight","backgroundColor","borderRadius","border","cursor","boxShadow","button","height","lineHeight","color","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","t","useTranslation","handleChange","target","value","style","onSubmit","e","preventDefault","authOperations","autoComplete","type","onChange","placeholder","required"],"sourceRoot":""}